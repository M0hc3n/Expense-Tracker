{"ast":null,"code":"import _objectSpread from \"C:/Users/TRETEC/Desktop/Software Engineering/Tp/code/Expense Tracker Website/light-bootstrap-dashboard-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/TRETEC/Desktop/Software Engineering/Tp/code/Expense Tracker Website/light-bootstrap-dashboard-react/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _toConsumableArray from \"C:/Users/TRETEC/Desktop/Software Engineering/Tp/code/Expense Tracker Website/light-bootstrap-dashboard-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nvar _excluded = [\"as\", \"bsPrefix\", \"className\", \"onClick\"];\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  var _useContext = useContext(AccordionContext),\n    activeEventKey = _useContext.activeEventKey,\n    onSelect = _useContext.onSelect,\n    alwaysOpen = _useContext.alwaysOpen;\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(function (k) {\n            return k !== eventKey;\n          });\n        } else {\n          eventKeyPassed = [].concat(_toConsumableArray(activeEventKey), [eventKey]);\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n    onSelect == null ? void 0 : onSelect(eventKeyPassed, e);\n    onClick == null ? void 0 : onClick(e);\n  };\n}\nvar AccordionButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n    Component = _ref$as === void 0 ? 'button' : _ref$as,\n    bsPrefix = _ref.bsPrefix,\n    className = _ref.className,\n    onClick = _ref.onClick,\n    props = _objectWithoutProperties(_ref, _excluded);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  var _useContext2 = useContext(AccordionItemContext),\n    eventKey = _useContext2.eventKey;\n  var accordionOnClick = useAccordionButton(eventKey, onClick);\n  var _useContext3 = useContext(AccordionContext),\n    activeEventKey = _useContext3.activeEventKey;\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), {}, {\n    \"aria-expanded\": eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  }));\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}