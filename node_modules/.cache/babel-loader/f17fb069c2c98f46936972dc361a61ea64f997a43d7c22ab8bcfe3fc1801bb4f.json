{"ast":null,"code":"import useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { cloneElement, useEffect, useRef } from 'react';\nfunction NoopTransition(_ref) {\n  var children = _ref.children,\n    inProp = _ref.in,\n    onExited = _ref.onExited,\n    mountOnEnter = _ref.mountOnEnter,\n    unmountOnExit = _ref.unmountOnExit;\n  var ref = useRef(null);\n  var hasEnteredRef = useRef(inProp);\n  var handleExited = useEventCallback(onExited);\n  useEffect(function () {\n    if (inProp) hasEnteredRef.current = true;else {\n      handleExited(ref.current);\n    }\n  }, [inProp, handleExited]);\n  var combinedRef = useMergedRefs(ref, children.ref);\n  var child = /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n  if (inProp) return child;\n  if (unmountOnExit) {\n    return null;\n  }\n  if (!hasEnteredRef.current && mountOnEnter) {\n    return null;\n  }\n  return child;\n}\nexport default NoopTransition;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}